--*************************************
--* TABLES AND OTHER OBJECTS CREATION *
--*************************************
USE [ServicesOnLine]

DROP TABLE Locations;
DROP TABLE EntityType;
DROP TABLE [ContactMechanisms];
DROP TABLE LocationsType;
DROP TABLE [PersonsRoles];
DROP TABLE Roles;
DROP TABLE ServiceMedia;
DROP TABLE ServiceSched; 
DROP TABLE Promotions;
DROP TABLE Orders;
DROP table PaymentHist;
DROP TABLE ShoppingCart;
DROP TABLE PriceList;
DROP TABLE ContactType;
DROP TABLE [Addresses]
DROP TABLE CCTransactions;
DROP TABLE Services;
DROP TABLE UnitOfMeasures;
DROP TABLE OrdersHeader;
DROP TABLE ServicesType;
DROP TABLE States;
DROP TABLE GeoRegions;
DROP table GeoCity;
DROP table GeoNations;
DROP TABLE TransactStates;
DROP TABLE Entity;
DROP TABLE Persons;
DROP TABLE Property;
DROP TABLE PropertyType;

--Create tables
---------------------
--GeoNations
--===================
CREATE TABLE GeoNations(
NationID int PRIMARY KEY NOT NULL IDENTITY(1,1),
ISOCode varchar(2),
NationName varchar(50)
)

-------------------
--GeoCity
--=================


CREATE TABLE GeoCity(
CityId int PRIMARY KEY NOT NULL IDENTITY(1,1),
IATACode varchar(3),
CityName varchar(25),
NationID int
)

----------------------
--GeoRegions;
--====================


CREATE TABLE GeoRegions( 
RegionId int PRIMARY KEY NOT NULL IDENTITY(1,1),
RegionName varchar(20)
)


--======
--States
--======


CREATE TABLE States(
	StateId int PRIMARY KEY NOT NULL IDENTITY(1,1),
	StateName varchar(50) NULL,
	StateCode varchar(50) NULL,
)
GO

--EntityType


CREATE TABLE EntityType(
	EntityTypeId int IDENTITY(1,1) NOT NULL,
	Name varchar(50) NOT NULL
 )



CREATE TABLE [dbo].[Entity](
	[EntityId] [int] PRIMARY KEY NOT NULL  IDENTITY(1,1) ,
	[PersonId] [int] NULL,
	[PropertyId] [int] NULL,
	[LocationId] [int] NULL)

--ALTER TABLE [dbo].[Entity]  
--WITH CHECK ADD  CONSTRAINT [FK_LocationId_Locations] 
--FOREIGN KEY([LocationId])
--REFERENCES [dbo].[Locations] ([LocationId])
--GO

--ALTER TABLE [dbo].[Entity] 
--CHECK CONSTRAINT [FK_LocationId_Locations]
--GO



CREATE TABLE ContactType(
	ContactTypeId   int        PRIMARY KEY NOT NULL IDENTITY(1,1),
	ContactTypeName varchar(20) NULL,
)



CREATE TABLE [dbo].[Addresses](
	[AddressId] [int] IDENTITY(1,1) NOT NULL,
	[Address1] [varchar](50) NULL,
	[Address2] [varchar](50) NULL,
	[City] [varchar](50) NULL,
	[StateId] [int] NULL,
	[County] [varchar](20) NULL,
	[NationId] [int] NULL,
	[ZipCode] [varchar](50) NULL,
 CONSTRAINT [PK_Addresses] PRIMARY KEY CLUSTERED 
(
	[AddressId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



CREATE TABLE [dbo].[ContactMechanisms](
	[ContMechID] [int] IDENTITY(1,1) NOT NULL,
	[EntityId] [int] NOT NULL,
	[AddressId] [int] NOT NULL,
	[ValidUntil] [date] NULL,
	[ContactTypeId] [int] NULL,
	[Phone] [varchar](25) NULL,
	[Email] [varchar](25) NULL,
	[SiteUrl] [varchar](50) NULL,
	[IsPrimary] [int] NULL
) ON [PRIMARY]
GO



--Locations type
--==============

CREATE TABLE LocationsType(
	LocTypeId int PRIMARY KEY NOT NULL IDENTITY(1,1),
	LocTypeName varchar(50) NULL
	)

GO



--Locations table
--===============


CREATE TABLE Locations(
	LocationId int  PRIMARY KEY NOT NULL IDENTITY(1,1) ,
	LocationName varchar(50) NULL,
	LocationTypeId int NOT NULL
 )

GO

--Roles
--=====


CREATE TABLE [dbo].[Roles](
	[RoleId] [int] PRIMARY KEY NOT NULL IDENTITY(1,1) ,
	[RoleName] [varchar](50) NULL
	) ON [PRIMARY]
GO



--=======
--Persons
--=======
CREATE TABLE Persons(
	[PersonId] [int] IDENTITY(1,1) NOT NULL,
	[PersonName] [varchar](50) NULL,
	[LastName] [varchar](50) NULL,
	[RoomId] [int] NOT NULL,
 CONSTRAINT [PK_Persons] PRIMARY KEY CLUSTERED 
(
	[PersonId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



CREATE TABLE [dbo].[PersonsRoles](
	[PersonRolesId] [int]  PRIMARY KEY NOT NULL IDENTITY(1,1) ,
	[PersonId] [int] NOT NULL,
	[RoleId] [int] NOT NULL)

-------------
--TransactStates


CREATE TABLE TransactStates(
StateId int PRIMARY KEY NOT NULL IDENTITY(1,1),
StateCode varchar(3),
StateName varchar(20)
)



--========================
CREATE TABLE UnitOfMeasures(
UoMId int PRIMARY KEY NOT NULL IDENTITY(1,1),
UomName varchar(15)
)



--=====================
CREATE TABLE ServicesType(
ServTypeId int PRIMARY KEY NOT NULL
IDENTITY(1,1),
ServTypeName varchar(20)
);



--==================
CREATE TABLE Services
(
ServicesId int PRIMARY KEY NOT NULL IDENTITY(1,1),
ServicesName varchar(50),
ServiceDescr varchar(400), 
Requirements varchar(200),
RegionId int,
ServTypeId int,
CityId int,
Duration int,
DurUomId int,
UnitOfMeasureId int,
MaxCapacity int
)


--------------
--ServiceMedia
--============


CREATE TABLE ServiceMedia(
ServiceMediaId int PRIMARY KEY NOT NULL IDENTITY(1,1),
ServiceId int,
MediaDescr varchar(20),
UrlPath varchar(50),
ValidFrom datetime,
ValidUntil datetime);

--Product/Services availability
--ServiceSched
--=============================


CREATE TABLE ServiceSched(
ServiceSchedId int PRIMARY KEY NOT NULL IDENTITY(1,1),
ServiceId int,
FromDate datetime,
UntilDate datetime,
Capacity int
);



--====================

--====================
CREATE TABLE PriceList (
PriceListId int PRIMARY KEY NOT NULL IDENTITY(1,1),
ServiceId int NOT NULL,
ListName varchar(20) NOT NULL,
Price money NOT NULL,
ValidFrom datetime,
ValidUntil datetime
)



--==========
--Marketing
--Promotions
--==========


CREATE TABLE Promotions(
PromotionsId int PRIMARY KEY NOT NULL IDENTITY(1,1),
ServiceId int,
PromDescr varchar(50),
DaysBefore int,
SalesRatio int,
Discount int,
ValidFrom datetime,
ValidUntil datetime);


CREATE TABLE OrdersHeader(
	OrdersHdrId int PRIMARY KEY NOT NULL IDENTITY(1,1),
	EntityId int, 
	OrderDate datetime,
	StateId integer, 
	Shipped datetime,
	Delivered datetime
)

--Orders Details

CREATE TABLE Orders( 
	OrdersId int PRIMARY KEY NOT NULL IDENTITY(1,1),
	OrdersHdrId int,
	ServiceId int,
	StateId int,
	Shipped datetime,
	Delivered datetime
)




--Payments related

CREATE TABLE PaymentHist (  
	PaymentsId int PRIMARY KEY NOT NULL IDENTITY(1,1),
	OrdersHdrId int,
	PaymentDate datetime,
	PaymntStateId int,
	Amount money
)



--Credit card transactions

CREATE TABLE CCTransactions(
	CCTransactId int PRIMARY KEY NOT NULl IDENTITY(1,1),
	OrdersHdrId int,
	CCResponse varchar(2),
	Amount money,
	ResponseDate datetime,
)



--ShoppingCart
--============


CREATE TABLE ShoppingCart(
ShopCartId int PRIMARY KEY NOT NULL IDENTITY(1,1),
EntityId int,
ShopDate datetime,
ServiceId int,
Quantity int,
PriceListId int,
Discount money,
StateId int
)


CREATE TABLE [dbo].[PropertyType](
	[PropertyTypeId] [int] IDENTITY(1,1) NOT NULL,
	[PropTypeName] [varchar](50) NULL,
 CONSTRAINT [PK_PropertyType] PRIMARY KEY CLUSTERED 
(
	[PropertyTypeId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[Property](
	[PropertyId] [int] IDENTITY(1,1) NOT NULL,
	[PropertyName] [varchar](50) NULL,
	[PropertyTypeId] [int] NOT NULL,
 CONSTRAINT [PK_Property] PRIMARY KEY CLUSTERED 
(
	[PropertyId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


--Data
INSERT INTO GeoNations (ISOCode, NationName)
VALUES
('US','United States'),
('MX','Mexico' ),
('HN','Honduras' );
GO


INSERT INTO GeoCity (IATACode,CityName, NationID)
VALUES 
( 'JNU',  'Juneau, Alaska',1  ),
( 'SFO',  'San Francisco, California' ,1 ),
( 'SEA',  'Seattle, Washington',1),
( 'SGY',  'Skagway, Alaska',1),
( 'SIT',  'Sitka, Alaska',1 ),
( 'CZM',  'Cozumel, México' ,2 ),
( 'CUN',  'Costa Maya, México',2 ),
( 'RTB',  'Roatán, Honduras' ,3 );


INSERT INTO GeoRegions(RegionName)
values
('Caribbean'),
('North America'),
('South America'),
('North Europe'),
('Mediterranean');


INSERT INTO States(
           StateName,StateCode)
     VALUES
           ('California','CA'),
           ('Washington','WA');
GO


INSERT INTO EntityType
           (Name)
     VALUES
			('Cruise Ship'),
			('Hotel'),
			('Financial'),
			('Legal'),
			('Person')

GO


INSERT INTO [dbo].[Entity]
           ([PersonId]
           ,[PropertyId]
           ,[LocationId])
     VALUES
		(1,	NULL	,NULL),
		(2,	NULL,	NULL),
		(NULL	,NULL,	2),
		(NULL	,NULL	,3),
		(NULL,	NULL	,4),
		(NULL	,NULL,	5),
		(NULL,	NULL,	6),
		(NULL,	NULL,	6),
		(4,	NULL,	NULL),
		(5	,NULL	,NULL),
		(6	,NULL,	NULL),
		(7,	NULL	,NULL),
		(8	,NULL,	NULL),
		(9	,NULL,	NULL),
		(10	,NULL	,NULL),
		(11	,NULL,	NULL),
		(12,	NULL,	NULL),
		(NULL,	NULL,	1),
		(18	,NULL	,NULL);

GO


INSERT INTO [dbo].[Addresses]
           ([Address1]
           ,[Address2]
           ,[City]
           ,[StateId]
           ,[County]
           ,[NationId]
           ,[ZipCode])
     VALUES
('1970 Napa Ct.'	,		NULL,	'Bothell',	2,		NULL,	1,	98011),
('9833 Mt. Dias Blv.'	,	NULL,	'Bothell',	2,		NULL,	1,	98011),
('6657 Sand Pointe Lane',	NULL,	'Seattle',	2,		NULL,	1,	98104),
('80 Sunview Terrace'	,	NULL,	'Duluth',		1,		NULL,	1,	55802),
('No address'	,			NULL,	NULL	,	NULL,	NULL,	NULL	,NULL);
GO


INSERT INTO [dbo].[ContactMechanisms]
           ([EntityId]
           ,[AddressId]
           ,[ValidUntil]
           ,[ContactTypeId]
           ,[Phone]
           ,[Email]
           ,[SiteUrl]
           ,[IsPrimary])
     VALUES
			(1,	1,	NULL,	1,		NULL,	NULL,	NULL,	NULL),
			(2,	2,	NULL,	1,		NULL,	NULL,	NULL,	NULL),
			(3,	5,	NULL,	3,		NULL,	NULL,	NULL,	NULL),
			(4,	3,	NULL,	3,		NULL,	NULL,	NULL,	NULL),
			(5,	1,	NULL,	3,		NULL,	NULL,	NULL,	NULL),
			(6,	4,	NULL,	3,		NULL,	NULL,	NULL,	NULL),
			(7,	1,	NULL,	3,		NULL,	NULL,	NULL,	NULL),
			(8,	3,	NULL,	3,		NULL,	NULL,	NULL,	NULL),
			(9,	1,	NULL,	1,		NULL,	NULL,	NULL,	NULL),
			(10,1,	NULL,	1,		NULL,	NULL,	NULL,	NULL),
			(11,1,	NULL,	1,		NULL,	NULL,	NULL,	NULL),
			(12,2,	NULL,	1,		NULL,	NULL,	NULL,	NULL),
			(13,3,	NULL,	1,		NULL,	NULL,	NULL,	NULL),
			(14,4,	NULL,	1,		NULL,	NULL,	NULL,	NULL),
			(15,5,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL),
			(16,2,	NULL,	1,		NULL,	NULL,	NULL,	NULL),
			(17,3,	NULL,	1,		NULL,	NULL,	NULL,	NULL),
			(1,	5,	NULL,	6,	'786 473 9999',	NULL,	NULL,	NULL),
			(1,	5,	NULL,	5,	'305 993 4455',	NULL,	NULL,	NULL),
			(1,	5,	NULL,	6,	'305 999 6666',	NULL,	NULL,	NULL),
			(4,	5,	NULL,	6,	'786 473 9999',	NULL,	NULL,	NULL),
			(1,	5,	NULL,	7,	NULL,			'name@progess.com',	NULL,	NULL),
			(3,	5,	NULL,	7,	NULL,			'name@success.com',	NULL,	NULL)
GO



INSERT INTO Locations
           (LocationName
           ,LocationTypeId)
     VALUES
        ('Orion',		1),
		('Cassiopeia',	1),
		('Perseus'	,	1),
		('Hercules',	2),
		('Ursa Major',	3),
		('Paradise',	4)
GO


INSERT INTO [dbo].[Roles]
           ([RoleName])
     VALUES
			('Customer'),
			('Employee'),
			('VIP'),
			('Repeater'),
			('Golden Club Member'),
			('Travel Agent'),
			('Inspector');
GO


INSERT INTO [dbo].[Persons]
           ([PersonName]
           ,[LastName]
           ,[RoomId])
     VALUES
		('Peter','Smith',	1),
		('Paul','Smith',	1),
		('Wanda','Smith',	2),
		('Ken','Sanchez',	2),
		('Terri','Lee',	3),
		('Rob','Walters',	4),
		('Gail','Ericson',	4),
		('Jossef','Goldberg',	5),
		('Dylan','Miller',	6),
		('Michael','Raheem',	7),
		('Janice','Galvin',	7),
		('Sharon','Salavaria',	7),
		('Updated','Again',	290),
		('Test','FromAPI',	130),
		('Fredy','Corea',	130);

		GO



INSERT INTO [dbo].[PersonsRoles]
           ([PersonId]
           ,[RoleId])
     VALUES
			(1,	1),
			(2,	1),
			(3,	1),
			(4,	1),
			(5,	1),
			(6,	1),
			(7,	1),
			(8,	1),
			(9,	1),
			(10,	1),
			(11,	1),
			(12,	1),
			(1,	3),
			(2,	3);
GO



INSERT INTO TransactStates(StateCode,StateName)
VALUES ('ACT', 'Active in cart'),
('DEL', 'Deleted from cart'),
('ORD', 'Ordered'),
('PRT', 'Printed from order'),
('SHP', 'Shipped'),
('DEL', 'Delivered'),
('CAN', 'Cancelled from order'),
('PP' , 'Payment Pending'),
('P'  , 'Paid'),
('CCA', 'Credit Card approved'),
('CCR', 'Credit Card rejected');



INSERT INTO UnitOfMeasures(UomName)
VALUES ('each'),
('hrs'),
('kg'),
('lbs');



INSERT INTO [dbo].[ServicesType]
values ('Excursions'),
('Sport Events'),
('SPA');



INSERT INTO Services
(
ServicesName,ServiceDescr,Requirements,RegionId,ServTypeId,CityId,Duration,DurUomId,UnitOfMeasureId,MaxCapacity)
values('Whale Watching & Wildlife Quest',
'This sightseeing cruise features ... ',
'Warm clothes',2,1,1,4,2,1,50);

INSERT INTO Services
(
ServicesName,ServiceDescr,Requirements,RegionId,ServTypeId,CityId,Duration,DurUomId,UnitOfMeasureId,MaxCapacity)
values('Whale Watching & Wildlife Quest',
'This sightseeing cruise features ... ',
'Warm clothes',2,1,1,4,2,1,50);

INSERT INTO Services
(
ServicesName,ServiceDescr,Requirements,RegionId,ServTypeId,CityId,Duration,DurUomId,UnitOfMeasureId,MaxCapacity)
values('Whale Watching & Wildlife Quest',
'This sightseeing cruise features ... ',
'Warm clothes',2,1,1,4,2,1,50);

INSERT INTO Services
(
ServicesName,ServiceDescr,Requirements,RegionId,ServTypeId,CityId,Duration,DurUomId,UnitOfMeasureId,MaxCapacity)
values('Whale Watching & Wildlife Quest',
'This sightseeing cruise features ... ',
'Warm clothes',2,1,1,4,2,1,50);

INSERT INTO Services
(
ServicesName,ServiceDescr,Requirements,RegionId,ServTypeId,CityId,Duration,DurUomId,UnitOfMeasureId,MaxCapacity)
values('Whale Watching & Wildlife Quest',
'This sightseeing cruise features ... ',
'Warm clothes',2,1,1,4,2,1,50);
--select * from [dbo].[Services]

--select s.[ServicesiD],st.ServTypeName,s.ServicesName, s.ServiceDescr, s.Requirements,
--st.ServTypeName
--from services s
--join [dbo].ServicesType st
--on s.ServTypeId = st.ServTypeId


INSERT INTO [dbo].[ServiceMedia]
           ([ServiceId]
           ,[MediaDescr]
           ,[UrlPath]
           ,[ValidFrom]
           ,[ValidUntil])
     VALUES
            (1,'Alaska Scenary', '../Images/Alaska1.jfif',NULL, NULL),
			(1,'Alaska Scenary','../Images/Alaska2.jfif',NULL, NULL),
			(1,'Alaska Scenary','../Images/Alaska3.jfif',NULL, NULL);
GO


INSERT INTO ServiceSched (ServiceId, FromDate, UntilDate, Capacity )
VALUES(1, getdate(), dateadd(month, 12, getdate()), 50 );

INSERT INTO ServiceSched (ServiceId, FromDate, UntilDate, Capacity )
VALUES(2, getdate(), dateadd(month, 12, getdate()), 50 );

INSERT INTO ServiceSched (ServiceId, FromDate, UntilDate, Capacity )
VALUES(3, getdate(), dateadd(month, 12, getdate()), 50 );

INSERT INTO ServiceSched (ServiceId, FromDate, UntilDate,Capacity )
VALUES(3, dateadd(month, 12, getdate()), dateadd(month, 18, getdate()), 50 )

INSERT INTO ServiceSched (ServiceId, FromDate, UntilDate,Capacity )
VALUES(4, getdate(), dateadd(month, 12, getdate()), 50 );



INSERT INTO PriceList(ServiceId,ListName,Price, ValidFrom,ValidUntil)
VALUES(1, 'Adult',50,   
dateadd(month,(3),getdate()), dateadd(month,(6), getdate()));

INSERT INTO PriceList(ServiceId,ListName,Price, ValidFrom,ValidUntil)
VALUES(1, 'Adult',40,   
dateadd(month,(3),getdate()), dateadd(month,(6), getdate()));



INSERT INTO Promotions(ServiceId, PromDescr, DaysBefore, SalesRatio, Discount, ValidFrom, ValidUntil)
VALUES (1,'Rule 1', 1, 80, 20, getdate(), dateadd(month, 12, getdate() ));

INSERT INTO Promotions(ServiceId, PromDescr, DaysBefore, SalesRatio, Discount, ValidFrom, ValidUntil)
VALUES (1,'Rule 1', 2, 60, 10, getdate(), dateadd(month, 12, getdate() ));

INSERT INTO Promotions(ServiceId, PromDescr, DaysBefore, SalesRatio, Discount, ValidFrom, ValidUntil)
VALUES (1,'Rule 1', 3, 60, 20, getdate(), dateadd(month, 12, getdate() ));


INSERT INTO [dbo].[OrdersHeader]( [EntityId], [OrderDate], [StateId])
VALUES( 1, getdate(), 3 );

--Insert data into orders details
INSERT INTO Orders([OrdersHdrId],[ServiceId],[StateId])
     VALUES(1,1,3)
GO


--Insert data into PaymentHist
INSERT INTO  PaymentHist (OrdersHdrId, PaymentDate,  PaymntStateId, Amount)
VALUES ( 1, getdate(),  9, 150.00  );

----Get data from PaymentHist
--SELECT [PaymentsId],[OrdersHdrId],[PaymentDate],[PaymntStateId],t.[StateName],[Amount]
--  FROM [dbo].[PaymentHist] ph
--  JOIN [dbo].[TransactStates] t on ph.[PaymntStateId] = t.[StateId]
--GO 

--Insert data into the credit card transactions
INSERT INTO [dbo].[CCTransactions]
           ([OrdersHdrId]
           ,[CCResponse]
           ,[Amount]
           ,[ResponseDate])
     VALUES
           (1,'00',50.00,getdate())
GO



INSERT INTO ShoppingCart (EntityId ,ShopDate ,ServiceId ,Quantity ,PriceListId, Discount, StateId)
VALUES (1, getdate(), 1, 2, 1, 10,  1  );

INSERT INTO ShoppingCart (EntityId ,ShopDate ,ServiceId ,Quantity ,PriceListId, Discount, StateId)
VALUES (1, getdate(), 2, 2, 1, 10,  1  );


INSERT INTO [dbo].[PropertyType]
           ([PropTypeName])
     VALUES
		    ('Cruise Ship'),
			('Cargo Ship'),
			('Hotel'),
			('Private Island'),
			('Financial'),
			('Legal'),
			('Goverment')

GO



INSERT INTO ContactType
           (ContactTypeName)
     VALUES
		('Home Address'),
		('Home Address'),
		('Business Address'),
		('Postal Address'),
		('Home Phone'),
		('Portable Phone'),
		('Email Address'),
		('Site Url');
GO

--Locations Types Data
--=======================
INSERT INTO LocationsType
           (LocTypeName)
     VALUES
          ('Cruise Ship'),
		  ('Cargo Ship'),
		  ('Hotel'),
		  ('Private Island')
GO

--Constraints

ALTER TABLE GeoCity
ADD CONSTRAINT [FK_NationId]
FOREIGN KEY (NationID)
REFERENCES GeoNations (NationID);


ALTER TABLE [dbo].[Addresses]  WITH CHECK ADD  CONSTRAINT [fk_StateId] FOREIGN KEY([StateId])
REFERENCES [dbo].[States] ([StateId])
GO

ALTER TABLE [dbo].[Addresses] CHECK CONSTRAINT [fk_StateId]
GO

ALTER TABLE [dbo].[ContactMechanisms] ADD  CONSTRAINT [DF_EntityAddress_ValidUntil]  DEFAULT (dateadd(year,(20),getdate())) FOR [ValidUntil]
GO

ALTER TABLE [dbo].[ContactMechanisms]  WITH CHECK ADD  CONSTRAINT [FK_ContactTypeId] FOREIGN KEY([ContactTypeId])
REFERENCES [dbo].[ContactType] ([ContactTypeId])
GO

ALTER TABLE [dbo].[ContactMechanisms] CHECK CONSTRAINT [FK_ContactTypeId]
GO

ALTER TABLE [dbo].[ContactMechanisms]  WITH CHECK ADD  CONSTRAINT [FK_EntityAddress_Entity] FOREIGN KEY([EntityId])
REFERENCES [dbo].[Entity] ([EntityId])
GO

ALTER TABLE [dbo].[ContactMechanisms] CHECK CONSTRAINT [FK_EntityAddress_Entity]
GO

ALTER TABLE [dbo].[ContactMechanisms] 
WITH CHECK ADD  CONSTRAINT [FK_EntityAddress_EntityAddress] 
FOREIGN KEY([AddressId])
REFERENCES [dbo].[Addresses] ([AddressId])
GO

ALTER TABLE [dbo].[ContactMechanisms] 
CHECK CONSTRAINT [FK_EntityAddress_EntityAddress]
GO

ALTER TABLE Locations
ADD  CONSTRAINT [DF_Locations_LocationType]  DEFAULT ((0)) 
FOR [LocationTypeId]
GO

ALTER TABLE Locations  
WITH CHECK ADD  CONSTRAINT [FK_Location_LocationType] 
FOREIGN KEY(LocationTypeId)
REFERENCES LocationsType (LocTypeId)
GO

ALTER TABLE [dbo].[Persons] ADD  CONSTRAINT [DF_Persons_RoomId]  DEFAULT ((0)) FOR [RoomId]
GO

ALTER TABLE [dbo].[PersonsRoles] 
ADD  CONSTRAINT [DF_PersonsRoles_RoleId]  
DEFAULT ((1)) FOR [RoleId]
GO

ALTER TABLE [dbo].[PersonsRoles]  
WITH CHECK ADD  CONSTRAINT [FK_PersonRoles_Person] 
FOREIGN KEY([PersonId])
REFERENCES [dbo].[Persons] ([PersonId])
GO

ALTER TABLE [dbo].[PersonsRoles] 
CHECK CONSTRAINT [FK_PersonRoles_Person]
GO

ALTER TABLE [dbo].[PersonsRoles]  
WITH CHECK ADD  CONSTRAINT [FK_PersonRoles_Roles] 
FOREIGN KEY([RoleId])
REFERENCES [dbo].[Roles] ([RoleId])
GO

ALTER TABLE [dbo].[PersonsRoles] 
CHECK CONSTRAINT [FK_PersonRoles_Roles]
GO

ALTER TABLE Services
ADD CONSTRAINT [FK_ReagionId]
FOREIGN KEY (RegionId)
REFERENCES GeoRegions (RegionId );

ALTER TABLE Services
ADD CONSTRAINT [FK_ServiceTypeId]
FOREIGN KEY (ServTypeId)
REFERENCES ServicesType (ServTypeId);

ALTER TABLE Services
ADD CONSTRAINT [FK_CityId]
FOREIGN KEY (CityId)
REFERENCES GeoCity (CityId);

ALTER TABLE Services
ADD CONSTRAINT [FK_DurUomId]
FOREIGN KEY (DurUomId )
REFERENCES UnitOfMeasures (UoMId );

ALTER TABLE Services
ADD CONSTRAINT [FK_UnitOfMeasureId]
FOREIGN KEY (UnitOfMeasureId )
REFERENCES UnitOfMeasures (UoMId );

ALTER TABLE ServiceMedia
ADD CONSTRAINT [FK_ServiceId_for_media]
FOREIGN KEY (ServiceId)
REFERENCES Services (ServicesId);

ALTER TABLE ServiceSched
ADD CONSTRAINT [FK_ServiceId_for_ServiceSched]
FOREIGN KEY (ServiceId)
REFERENCES Services (ServicesId);

ALTER TABLE PriceList
ADD CONSTRAINT [DF_validUntilDate]
DEFAULT (dateadd(year,(20),getdate()))
FOR [validUntil]
GO

ALTER TABLE PriceList
ADD CONSTRAINT [FK_ServiceId]
FOREIGN KEY (ServiceId)
REFERENCES Services (ServicesId);

ALTER TABLE Promotions
ADD CONSTRAINT [FK_ServiceId_for_Promotions]
FOREIGN KEY (ServiceId)
REFERENCES [dbo].[Services]([ServicesId] );

ALTER TABLE OrdersHeader
ADD CONSTRAINT [FK_OrdersHeader_EntityId]
FOREIGN KEY (EntityId )
REFERENCES [dbo].[Entity](EntityId );

ALTER TABLE OrdersHeader
ADD CONSTRAINT [FK_OrdersHeader_StateId]
FOREIGN KEY (StateId )
REFERENCES [dbo].[TransactStates](StateId );

ALTER TABLE Orders
ADD CONSTRAINT [FK_OrdersHdrId_Orders ]
FOREIGN KEY (OrdersHdrId)
REFERENCES OrdersHeader( OrdersHdrId)

ALTER TABLE Orders
ADD CONSTRAINT [FK_ServiceId_Orders ]
FOREIGN KEY (ServiceId)
REFERENCES Services( ServicesId)

ALTER TABLE Orders
ADD CONSTRAINT [FK_Orders_StateId]
FOREIGN KEY (StateId )
REFERENCES TransactStates(StateId );

ALTER TABLE PaymentHist
ADD CONSTRAINT [OrdersHdrId_IN_PaymentHist]
FOREIGN KEY (OrdersHdrId)
REFERENCES OrdersHeader(OrdersHdrId);

ALTER TABLE PaymentHist
ADD CONSTRAINT [FK_PaymntStateId_PaymentHist]
FOREIGN KEY (PaymntStateId)
REFERENCES [dbo].[TransactStates]([StateId]);

ALTER TABLE CCTransactions
ADD CONSTRAINT [FK_OrdersHdrId_CCTransactions]
FOREIGN KEY (OrdersHdrId)
REFERENCES OrdersHeader (OrdersHdrId);

ALTER TABLE ShoppingCart
ADD CONSTRAINT [FK_EntityId]
FOREIGN KEY (EntityId)
REFERENCES [dbo].[Entity] ([EntityId]);

ALTER TABLE ShoppingCart
ADD CONSTRAINT [FK_ServiceId_From_ShoppingCart]
FOREIGN KEY (ServiceId)
REFERENCES Services (ServicesId);

ALTER TABLE ShoppingCart
ADD CONSTRAINT [FK_PriceId_ShoppintCart]
FOREIGN KEY (PriceListId )
REFERENCES PriceList(PriceListId );

ALTER TABLE ShoppingCart
ADD CONSTRAINT [FK_ShoppintCart_StateId]
FOREIGN KEY (StateId )
REFERENCES TransactStates(StateId );

ALTER TABLE [dbo].[Property] ADD  CONSTRAINT [DF_Property_PropertyType]  DEFAULT ((0)) FOR [PropertyTypeId]
GO

ALTER TABLE [dbo].[Property]  WITH CHECK ADD  CONSTRAINT [FK_Property_PropertyType] FOREIGN KEY([PropertyTypeId])
REFERENCES [dbo].[PropertyType] ([PropertyTypeId])
GO

ALTER TABLE [dbo].[Property] CHECK CONSTRAINT [FK_Property_PropertyType]
GO

--Views
USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vAddresses]    Script Date: 4/2/2021 1:58:17 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW  vAddresses;
GO

CREATE VIEW [dbo].[vAddresses]
as
(

SELECT [AddressId]
      ,[Address1]
      ,[Address2]
      ,[City]
      ,a.[StateId]
	  ,s.[StateCode],s.[StateName]
      ,[County]
      ,[NationId]
      ,[ZipCode]
  FROM [ServicesOnLine].[dbo].[Addresses] a
  join States s on a.[StateId] = s.[StateId]);
GO

USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vAddressForAllEntities]    Script Date: 4/2/2021 1:58:50 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW vAddressForAllEntities;
GO

CREATE VIEW [dbo].[vAddressForAllEntities]
AS
SELECT        dbo.ContactMechanisms.ContMechID, dbo.ContactMechanisms.EntityId, dbo.ContactType.ContactTypeName, dbo.ContactMechanisms.ValidUntil, dbo.Addresses.Address1, dbo.Addresses.Address2, dbo.Addresses.City, 
                         dbo.States.StateCode, dbo.States.StateName, dbo.Addresses.County, dbo.Addresses.ZipCode
FROM            dbo.Entity INNER JOIN
                         dbo.ContactMechanisms INNER JOIN
                         dbo.ContactType ON dbo.ContactMechanisms.ContactTypeId = dbo.ContactType.ContactTypeId INNER JOIN
                         dbo.Addresses ON dbo.ContactMechanisms.AddressId = dbo.Addresses.AddressId INNER JOIN
                         dbo.States ON dbo.Addresses.StateId = dbo.States.StateId ON dbo.Entity.EntityId = dbo.ContactMechanisms.EntityId CROSS JOIN
                         dbo.Locations INNER JOIN
                         dbo.LocationsType ON dbo.Locations.LocationTypeId = dbo.LocationsType.LocTypeId
GO


USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vContactMechanismForLocations]    Script Date: 4/2/2021 1:59:16 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW vContactMechanismForLocations;
GO

CREATE VIEW [dbo].[vContactMechanismForLocations]
AS
SELECT        dbo.Locations.LocationName, dbo.LocationsType.LocTypeName, dbo.ContactMechanisms.ContMechID, dbo.ContactType.ContactTypeName, dbo.Entity.EntityId, dbo.ContactMechanisms.AddressId, dbo.Addresses.Address1, 
                         dbo.Addresses.Address2, dbo.States.StateCode, dbo.States.StateName, dbo.Addresses.ZipCode, dbo.ContactMechanisms.ValidUntil, dbo.ContactMechanisms.Phone, dbo.ContactMechanisms.Email, 
                         dbo.ContactMechanisms.SiteUrl
FROM            dbo.ContactMechanisms INNER JOIN
                         dbo.Entity ON dbo.ContactMechanisms.EntityId = dbo.Entity.EntityId INNER JOIN
                         dbo.ContactType ON dbo.ContactMechanisms.ContactTypeId = dbo.ContactType.ContactTypeId INNER JOIN
                         dbo.Addresses ON dbo.ContactMechanisms.AddressId = dbo.Addresses.AddressId INNER JOIN
                         dbo.States ON dbo.Addresses.StateId = dbo.States.StateId RIGHT OUTER JOIN
                         dbo.LocationsType INNER JOIN
                         dbo.Locations ON dbo.LocationsType.LocTypeId = dbo.Locations.LocationTypeId ON dbo.Entity.LocationId = dbo.Locations.LocationId
GO

USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vEntities]    Script Date: 4/2/2021 1:59:36 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW vEntities;
GO

CREATE VIEW [dbo].[vEntities]
AS
SELECT        e.EntityId, e.PersonId, pe.LastName, pe.PersonName, pe.RoomId, prl.RoleId, r.RoleName, e.PropertyId, e.LocationId, dbo.Locations.LocationName, dbo.LocationsType.LocTypeName
FROM            dbo.LocationsType INNER JOIN
                         dbo.Locations ON dbo.LocationsType.LocTypeId = dbo.Locations.LocationTypeId RIGHT OUTER JOIN
                         dbo.Entity AS e ON dbo.Locations.LocationId = e.LocationId LEFT OUTER JOIN
                         dbo.Persons AS pe ON pe.PersonId = e.PersonId LEFT OUTER JOIN
                         dbo.PersonsRoles AS prl ON pe.PersonId = prl.PersonId LEFT OUTER JOIN
                         dbo.Roles AS r ON prl.RoleId = r.RoleId
GO


USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vOrderHeader]    Script Date: 4/2/2021 1:59:53 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW vOrderHeader;
GO

CREATE VIEW [dbo].[vOrderHeader]
AS
SELECT        dbo.OrdersHeader.OrdersHdrId, dbo.Persons.PersonName, dbo.Persons.LastName, dbo.OrdersHeader.OrderDate, dbo.TransactStates.StateName, dbo.OrdersHeader.EntityId, dbo.Entity.PersonId
FROM            dbo.OrdersHeader INNER JOIN
                         dbo.Entity ON dbo.OrdersHeader.EntityId = dbo.Entity.EntityId INNER JOIN
                         dbo.Persons ON dbo.Entity.PersonId = dbo.Persons.PersonId INNER JOIN
                         dbo.TransactStates ON dbo.OrdersHeader.StateId = dbo.TransactStates.StateId
GO


USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vOrders]    Script Date: 4/2/2021 2:00:12 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW vOrders;
GO

CREATE VIEW [dbo].[vOrders]
AS
SELECT        dbo.OrdersHeader.OrdersHdrId, dbo.OrdersHeader.EntityId, dbo.OrdersHeader.OrderDate, dbo.OrdersHeader.StateId, dbo.OrdersHeader.Shipped, dbo.OrdersHeader.Delivered
FROM            dbo.Services INNER JOIN
                         dbo.Orders ON dbo.Services.ServicesId = dbo.Orders.ServiceId RIGHT OUTER JOIN
                         dbo.OrdersHeader LEFT OUTER JOIN
                         dbo.CCTransactions ON dbo.OrdersHeader.OrdersHdrId = dbo.CCTransactions.OrdersHdrId ON dbo.Orders.OrdersHdrId = dbo.OrdersHeader.OrdersHdrId LEFT OUTER JOIN
                         dbo.PaymentHist ON dbo.OrdersHeader.OrdersHdrId = dbo.PaymentHist.OrdersHdrId
GO


USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vOrdersDetails]    Script Date: 4/2/2021 2:00:30 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW vOrdersDetails;
GO

CREATE VIEW [dbo].[vOrdersDetails]
AS
SELECT        dbo.Orders.OrdersId, dbo.OrdersHeader.OrderDate, dbo.Orders.Shipped, dbo.Orders.Delivered, dbo.Persons.PersonName, dbo.Persons.LastName, dbo.Services.ServicesName, dbo.Services.Requirements, 
                         dbo.Services.Duration
FROM            dbo.PaymentHist INNER JOIN
                         dbo.OrdersHeader ON dbo.PaymentHist.OrdersHdrId = dbo.OrdersHeader.OrdersHdrId INNER JOIN
                         dbo.TransactStates ON dbo.PaymentHist.PaymntStateId = dbo.TransactStates.StateId LEFT OUTER JOIN
                         dbo.Locations RIGHT OUTER JOIN
                         dbo.Entity INNER JOIN
                         dbo.ContactMechanisms ON dbo.Entity.EntityId = dbo.ContactMechanisms.EntityId LEFT OUTER JOIN
                         dbo.Addresses ON dbo.ContactMechanisms.AddressId = dbo.Addresses.AddressId ON dbo.Locations.LocationId = dbo.Entity.LocationId LEFT OUTER JOIN
                         dbo.Persons ON dbo.Entity.PersonId = dbo.Persons.PersonId ON dbo.OrdersHeader.EntityId = dbo.Entity.EntityId FULL OUTER JOIN
                         dbo.Services RIGHT OUTER JOIN
                         dbo.Orders ON dbo.Services.ServicesId = dbo.Orders.ServiceId ON dbo.OrdersHeader.OrdersHdrId = dbo.Orders.OrdersHdrId AND dbo.TransactStates.StateId = dbo.Orders.StateId
GO

USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vPersonContactMechnaisms]    Script Date: 4/2/2021 2:00:55 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW vPersonContactMechnaisms;
GO

CREATE VIEW [dbo].[vPersonContactMechnaisms]
AS
SELECT        dbo.Persons.PersonId, dbo.Persons.PersonName, dbo.Persons.LastName, dbo.Persons.RoomId, dbo.Roles.RoleName, dbo.ContactType.ContactTypeName, dbo.Addresses.AddressId, dbo.Addresses.Address1, 
                         dbo.Addresses.Address2, dbo.Addresses.City, dbo.Addresses.StateId, dbo.Addresses.County, dbo.Addresses.NationId, dbo.Addresses.ZipCode, dbo.ContactMechanisms.ValidUntil, dbo.ContactMechanisms.Phone, 
                         dbo.ContactMechanisms.Email, dbo.ContactMechanisms.SiteUrl, dbo.ContactMechanisms.IsPrimary, dbo.States.StateCode, dbo.States.StateName
FROM            dbo.States INNER JOIN
                         dbo.Addresses ON dbo.States.StateId = dbo.Addresses.StateId RIGHT OUTER JOIN
                         dbo.PersonsRoles INNER JOIN
                         dbo.Persons ON dbo.PersonsRoles.PersonId = dbo.Persons.PersonId INNER JOIN
                         dbo.Roles ON dbo.PersonsRoles.RoleId = dbo.Roles.RoleId LEFT OUTER JOIN
                         dbo.ContactMechanisms INNER JOIN
                         dbo.Entity ON dbo.ContactMechanisms.EntityId = dbo.Entity.EntityId ON dbo.Persons.PersonId = dbo.Entity.PersonId LEFT OUTER JOIN
                         dbo.ContactType ON dbo.ContactMechanisms.ContactTypeId = dbo.ContactType.ContactTypeId ON dbo.Addresses.AddressId = dbo.ContactMechanisms.AddressId
GO

USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vPersonsRoles]    Script Date: 4/2/2021 2:01:12 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW vPersonsRoles;
GO

CREATE VIEW [dbo].[vPersonsRoles]
AS
SELECT        p.PersonId, p.LastName, p.PersonName, r.RoleName
FROM            dbo.Roles AS r RIGHT OUTER JOIN
                         dbo.PersonsRoles AS pr ON r.RoleId = pr.RoleId RIGHT OUTER JOIN
                         dbo.Persons AS p ON pr.PersonId = p.PersonId
GO

USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vProperties]    Script Date: 4/2/2021 2:01:30 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vPropertiesContactMechanisms]    Script Date: 4/2/2021 2:01:46 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vServiceFull]    Script Date: 4/2/2021 2:02:02 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW vServiceFull;
GO

CREATE VIEW [dbo].[vServiceFull]
AS
SELECT        dbo.Services.ServicesId, dbo.Services.ServicesName, dbo.Services.ServiceDescr, dbo.Services.Requirements, dbo.Services.RegionId, dbo.GeoRegions.RegionName, dbo.Services.ServTypeId, 
                         dbo.ServicesType.ServTypeName, dbo.Services.CityId, dbo.Services.MaxCapacity, dbo.GeoCity.CityName, dbo.Services.Duration, dbo.Services.DurUomId, UnitOfMeasuresDur.UomName, 
                         dbo.UnitOfMeasures.UomName AS Expr1
FROM            dbo.Services INNER JOIN
                         dbo.PriceList ON dbo.Services.ServicesId = dbo.PriceList.ServiceId INNER JOIN
                         dbo.Promotions ON dbo.Services.ServicesId = dbo.Promotions.ServiceId INNER JOIN
                         dbo.ServiceMedia ON dbo.Services.ServicesId = dbo.ServiceMedia.ServiceId INNER JOIN
                         dbo.ServiceSched ON dbo.Services.ServicesId = dbo.ServiceSched.ServiceId INNER JOIN
                         dbo.ShoppingCart ON dbo.Services.ServicesId = dbo.ShoppingCart.ServiceId AND dbo.PriceList.PriceListId = dbo.ShoppingCart.PriceListId LEFT OUTER JOIN
                         dbo.GeoCity ON dbo.Services.CityId = dbo.GeoCity.CityId LEFT OUTER JOIN
                         dbo.UnitOfMeasures ON dbo.Services.UnitOfMeasureId = dbo.UnitOfMeasures.UoMId LEFT OUTER JOIN
                         dbo.UnitOfMeasures AS UnitOfMeasuresDur ON dbo.Services.DurUomId = UnitOfMeasuresDur.UoMId LEFT OUTER JOIN
                         dbo.GeoRegions ON dbo.Services.RegionId = dbo.GeoRegions.RegionId LEFT OUTER JOIN
                         dbo.ServicesType ON dbo.Services.ServTypeId = dbo.ServicesType.ServTypeId
GO


USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vServices]    Script Date: 4/2/2021 2:02:17 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW vServices;
GO

CREATE VIEW [dbo].[vServices]
AS
SELECT        dbo.Services.ServicesId, dbo.Services.ServicesName, dbo.Services.ServiceDescr, dbo.Services.Requirements, dbo.Services.RegionId, dbo.GeoRegions.RegionName, dbo.Services.ServTypeId, 
                         dbo.ServicesType.ServTypeName, dbo.Services.CityId, dbo.Services.MaxCapacity, dbo.GeoCity.CityName, dbo.Services.Duration, dbo.Services.DurUomId, UnitOfMeasuresDur.UomName, 
                         dbo.UnitOfMeasures.UomName AS Expr1
FROM            dbo.Services LEFT OUTER JOIN
                         dbo.GeoCity ON dbo.Services.CityId = dbo.GeoCity.CityId LEFT OUTER JOIN
                         dbo.UnitOfMeasures ON dbo.Services.UnitOfMeasureId = dbo.UnitOfMeasures.UoMId LEFT OUTER JOIN
                         dbo.UnitOfMeasures AS UnitOfMeasuresDur ON dbo.Services.DurUomId = UnitOfMeasuresDur.UoMId LEFT OUTER JOIN
                         dbo.GeoRegions ON dbo.Services.RegionId = dbo.GeoRegions.RegionId LEFT OUTER JOIN
                         dbo.ServicesType ON dbo.Services.ServTypeId = dbo.ServicesType.ServTypeId
GO

USE [ServicesOnLine]
GO

/****** Object:  View [dbo].[vShoppingCart]    Script Date: 4/2/2021 2:02:34 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

DROP VIEW vShoppingCart;
GO

CREATE VIEW [dbo].[vShoppingCart]
AS
SELECT        TOP (100) PERCENT dbo.ShoppingCart.ShopCartId, dbo.Entity.EntityId, dbo.Entity.PersonId, dbo.Entity.LocationId, dbo.Services.ServicesName, dbo.ShoppingCart.PriceListId
FROM            dbo.ShoppingCart INNER JOIN
                         dbo.Services ON dbo.ShoppingCart.ServiceId = dbo.Services.ServicesId INNER JOIN
                         dbo.Entity ON dbo.ShoppingCart.EntityId = dbo.Entity.EntityId
ORDER BY dbo.Entity.PersonId, dbo.Entity.LocationId
GO

